# Everything in core is imported into every module outside the standard library

def: test
: 4 
  [ 1 + ] [ 1 + ] split
  int=
  [ 10 ]
  [ 20 ] if

# booleans

defunion: Bool
: True
: False

defstruct: True
defstruct: False

defmulti: zero?
type: Int -- Bool
: Int( value 0 )
  drop True
: Int
  drop False 

def: int=
type: Int Int -- Bool
: - zero?

defmulti: not
type: Bool -- Bool
: True
  drop False
: False
  drop True

defmulti: select
type: Bool a a -- a
: True
  drop swap drop
: False
  rotate drop2

def: if
type: a... Bool [ a... -- b... ] [ a... -- b... ] -- b...
: select !

# stack manipulation

def: over
type: a b -- a b a
: swap dup rotate

def: drop2
type: a b c -- a
: drop drop

def: split
type: a [ a -- b ] [ a -- c ] -- b c
: -rotate dup # [] [] a a
  -rotate ! # [] a c
  swap -rotate # c a []
  ! # c b
  swap
  
